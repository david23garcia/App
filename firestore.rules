service cloud.firestore {
  match /databases/{database}/documents {
  function getRoleByUser() {
  	return get(/databases/$(database)/documents/user/$(request.auth.uid)).data.role
  }
  function isSingIn() {
  	return request.auth.uid != null
  }
    match /user/{document} {
      allow read, create: if true
      allow update, delete: if isSingIn();
   }
   match /shop/{document} {
   		allow read: if true
      allow create: if isSingIn() && (getRoleByUser() == "user" || getRoleByUser() == "superadmin")
      allow update: if isSingIn() && (getRoleByUser() == "admin" || getRoleByUser() == "superadmin")
      allow delete: if isSingIn() && (getRoleByUser() == "admin" || getRoleByUser() == "superadmin")
   }
   match /order/{document} {
      allow read: if isSingIn()
      allow create: if isSingIn() && (getRoleByUser() == "user")
      allow update: if isSingIn() && (getRoleByUser() == "admin" || getRoleByUser() == "employee" || getRoleByUser() == "user")
      allow delete: if isSingIn() && (getRoleByUser() == "superadmin")
   }
   match /article/{document} {
     allow read: if true
      allow create: if isSingIn() && (getRoleByUser() == "admin" || getRoleByUser() == "employee")
      allow update: if isSingIn() && (getRoleByUser() == "admin" || getRoleByUser() == "employee")
      allow delete: if isSingIn() && (getRoleByUser() == "admin" || getRoleByUser() == "employee" )
   }
  }
}

